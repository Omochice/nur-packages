name: Check nvfetcher result

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: {}

jobs:
  path-filter:
    timeout-minutes: 30
    outputs:
      nvfetcher: ${{steps.changes.outputs.nvfetcher}}
      renovate: ${{steps.changes.outputs.renovate}}
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          filters: |
            actions:
              - nvfetcher.toml
            renovate:
              - renovate.json5
  check-nvfetcher:
    needs: path-filter
    if: needs.path-filter.outputs.nvfetcher == 'true'
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install nix
        uses: cachix/install-nix-action@08dcb3a5e62fa31e2da3d490afc4176ef55ecd72 # v30
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/refs/heads/nixpkgs-unstable.tar.gz
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Run nvfetcher
        run: nix develop --command nvfetcher
      - name: Check diff
        run: |
          CHANGES=$(git diff --name-only _sources/generated.json _sources/generated.nix)
          if [ -n "$CHANGES" ]; then
            exit 1
          fi
  check-renovate-config:
    needs: path-filter
    if: needs.path-filter.outputs.renovate == 'true'
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install nix
        uses: cachix/install-nix-action@08dcb3a5e62fa31e2da3d490afc4176ef55ecd72 # v30
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/refs/heads/nixpkgs-unstable.tar.gz
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Validate renovate config
        run: nix develop .#renovate --command renovate-config-validator renovate.json5
  status-check:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs:
      - check-nvfetcher
      - check-renovate-config
    permissions: {}
    if: failure()
    steps:
      - run: exit 1
